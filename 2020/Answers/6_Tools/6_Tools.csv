"Horodateur","Provide us your anonymous identifier","(SUS 1 - FV) We think that we would like to use this visualisation tool frequently when developing feature-based context-oriented systems.","(SUS 2 - FV) We found the visualisation tool unnecessarily complex.","(SUS 3 - FV) We thought the visualisation tool was easy to use.","(SUS 4 - FV) We think that we would need the support of a technical person to be able to use this visualisation tool.","(SUS 5 - FV) We found the various functions in this visualisation tool were well integrated.","(SUS 6 - FV) We thought there was too much inconsistency in this visualisation tool.","(SUS 7 - FV) We would imagine that most people would learn to use this visualisation tool very quickly.","(SUS 8 - FV) We found the visualisation tool very cumbersome to use.","(SUS 9 - FV) We felt very confident using the visualisation tool.","(SUS 10 - FV) We needed to learn a lot of things before we could get going with this visualisation tool.","(FV) Is the dynamic representation of the activated entities (contexts, features, ...) in the visualisation tool understandable?","(FV) Is the control flow of the architecture of our programming approach clear in this visualisation?","(FV) Can this visualisation tool help you to better understand a program developed using this programming approach?","(FV) Explain how/why this visualisation can/cannot help you to better understand a program developed using this programming approach. (Optional)","(FV) Can this visualisation tool help you to better debug such a program?","(FV) Explain how/why this visualisation can/cannot help you to debug such a program. (Optional)","(FV) Mention some positive aspects of this proposed visualisation tool.","(FV) Mention some less interesting aspects of this proposed visualisation tool.","(FV) Do you have any further suggestions regarding how to improve the proposed visualisation tool to make it easier to understand/develop/debug feature-based context-oriented systems? (Optional)","(SUS 1 - CFMV) We think that we would like to use this visualisation tool frequently when developing feature-based context-oriented systems.","(SUS 2 - CFMV) We found the visualisation tool unnecessarily complex.","(SUS 3 - CFMV) We thought the visualisation tool was easy to use.","(SUS 4 - CFMV) We think that we would need the support of a technical person to be able to use this visualisation tool.","(SUS 5 - CFMV) We found the various functions in this visualisation tool were well integrated.","(SUS 6 - CFMV) We thought there was too much inconsistency in this visualisation tool.","(SUS 7 - CFMV) We would imagine that most people would learn to use this visualisation tool very quickly.","(SUS 8 - CFMV) We found the visualisation tool very cumbersome to use.","(SUS 9 - CFMV) We felt very confident using the visualisation tool.","(SUS 10 - CFMV) We needed to learn a lot of things before we could get going with this visualisation tool.","(CFMV) Is the *static* representation of the models (context model, feature model, ...) in this visualisation tool understandable?","(CFMV) Is the *dynamic* representation of the models (context model, feature model, ...) in this visualisation tool understandable?","(CFMV) Do you think this visualization tool is more interesting with regard to its static or its dynamic visualisation aspects?","(CFMV) Does such a visualisation tool help you to better understand such an approach when you develop feature-based context-oriented programs?","(CFMV) Explain how/why you think this visualisation tool helps you to better understand or not such an approach when you develop feature-based context-oriented systems. (Optional)","(CFMV) Mention some positive aspects of this proposed visualisation tool.","(CFMV) Mention some less interesting aspects of this proposed visualisation tool.","(CFMV) Do you have any further suggestions regarding how to improve the proposed visualisation tool to make it easier to unerstand/develop/debug feature-based context-oriented systems? (Optional)","After using our visualisation tools, how complementary do you think that these two visualisation tools are?","Explain how/why you think both visualisation tools are complementary or not? (Optional)","Do you think in general that such visualisation tools can help you to better understand our feature-based context-oriented approach?","Assume we gave you these visualisation tools at the beginning of your development stage, how would you have assessed the complexity of their use?","Assume we gave you these visualisation tools at the beginning of your development stage, do you think you would have understood better our underlying architecture and approach?","If we would conduct a similar experiment in the future, do you think we should provide these visualisation tools earlier on? Explain why."
"2020/12/15 4:54:16 PM UTC+1","bulldOzer","4","2","3","2","1","3","2","3","2","1","2","2","4","","4","","Easy to spot the way components interact with each other","The dynamic generation of the tree tangles up the links between the nodes. We have to sometimes manually drag the ones we are interested in, in order to clearly see what is going on.","Automatically refresh the page (should be +/- easy  given that you use websockets) instead of having to F5 every time we restart the application.","4","3","4","2","3","2","3","4","3","2","5","4","4","4","","A graphical representation is a more intuitive way to approach such a complex system instead of solely relying on the mapping done in the files.","The interface get cluttered rather easily with the amount of information displayed. It would be nice to be able to rearrange the ""contexts"", ""features"", ""code"" boxes (top-down, left-right, ...). This is already possible but their positions get reset after some time.","","4","","4","4","5","Yes, we would have suggested their addition and were quite surprised to see that they already existed. We wish they had been introduced earlier as it would have helped us in the design and debug process."
"2020/12/15 6:09:16 PM UTC+1","XAEA-XII","4","1","5","2","5","1","5","1","5","3","5","4","5","The step-by-step truly helps understanding what is going on precisely","5","You can literally see everything that is happening ","Simple, clear and, most importantly, useful","The diagram library sometimes makes the diagrams messy when they become quite huge","Ideally, get rid or replace the diagram library to make it scale well for medium/large graphs","5","3","5","1","5","1","5","2","5","3","5","5","4","5","You can see everything that is going on","Easy, clear and useful (you can see everything that is happening!)","Again, the diagram library makes it hard to read very large graphs.","Replace the diagram library","2","We feel that only one could be used and combine both of their functionalities.","5","2","3","We do not think so. You need to understand COP first to use these tools correctly and understand how and why they are useful."
"2020/12/15 6:44:50 PM UTC+1","AudeJavel","4","2","3","2","3","2","4","3","3","2","4","3","3","","4","Because you can clearly see where something is wrong visually.","-Helps to ""visualize the code"" -Helps to understand the programming language","-A bit difficult to setup -Messy with the step by step and with the jiggle effect","","3","3","4","1","3","2","4","2","4","2","4","4","2","4","","-Helps to ""visualize the code"" -Helps to understand the programming language -Help to spot if there are errors in the model","-A bit difficult to setup -Messy with the mapping","","3","","4","3","4","Yes because it helps to understand the programming language"
"2020/12/16 9:13:01 PM UTC+1","ilfautquonsenrappelle","4","2","4","2","4","2","4","3","3","2","4","4","4","","4","","A good overview of the project","the option to have more details ","","5","1","4","2","4","2","4","2","4","5","5","4","4","4","","A good view of the project","we don't se less intresting aspects ","","5","","5","2","4",""
"2020/12/17 9:32:33 AM UTC+1","Gandalf","4","3","4","2","3","3","4","2","2","2","4","2","4","","4","","Good vizualisation of the structure","//","","4","3","4","2","3","3","4","3","2","2","4","3","3","5","","Step by step very usefull","adapts links not clear","","3","","5","3","4","Yes because it represents well the goal of the language"
"2020/12/17 10:12:57 AM UTC+1","Anonymous Ultima","4","1","3","1","5","1","5","3","5","1","4","5","4","It helps to understand well the activation of the features. But, the visualisation tool with the contexts is better to clearly understand what is happening in a context oriented application.","4","It can help to find some feature problems. But again, all the problems don't come from the features. With this visualisation tool, we can lose time to try to find a feature problem, if it was in fact a context problem.","The visualisation is good. We clearly see what is happening on the screen and undertsand what it means. ","-The main problem for us is the impossibility to go back in a previous step. We can only move forward and it can be problematic if we always have to restart everything to be able to do it. -The display of the features are not optimal. It doesn't appear from left to right but a bit everywhere. ","Optimize the small problems mentionned above.","5","2","4","2","5","1","4","1","5","1","5","5","4","5","The separation in three categories in different parts of the screen is reallly good. The dynamic system of activation and deactivation is optimized. We can clearly see the contexts activation, followed by the features, and understand why it works like that. ","There are a lot of visualisation options (below). It can be used to understand exactly what is happening and it is very good. ","The fact that there are a lot of options is good, as mentionned, but it can be hard to use sometimes. We didn't always know how to deactivate or activate some options, and had to try a bit evrything in order to do it. ","","2","For us, the visualisation tool that includes the contexts is very complete. It could almost be enough by itself. The other one is more visual for the features, but it is not necessary to have both. ","5","3","2","Maybe one or two weeks earlier could be good. In fact, we started the implementation of the application before having the tools. We had a recurrent error (InvalidModelError) and didn't exactly know how to fix it. If we had access to the visualisation tools earlier, we could have used it to solve this error faster."
"2020/12/17 10:20:15 AM UTC+1","Bruce Wayne","5","2","5","1","4","2","5","2","5","2","5","3","4","","4","","Very visual and it allows to see if we activate features that we shouldn't.","We can't go back in term of step ","","5","2","5","1","5","1","5","1","5","2","4","4","5","4","","Same as before ","It is difficult to see all the links, maybe leave the possibility to space the different parts (this comment is also valid for the previous tool)","","5","","4","5","5","Yes, it gives you a more visual idea of how it works and makes it easier to debug, especially at the beginning of the learning process."
"2020/12/17 11:16:03 AM UTC+1","Little Nemo","2","1","5","1","4","2","5","1","5","2","2","2","5","This tool provided us with a visual way to quickly see the activated contexts and related features with relations features/features and features/classes. It is useful since, without the tool, we would have needed to skim into the code and look at the features and mapping declaration file, which would have been really cumbersome.","5","For example, for the first question of mission 2, we were asked to activate/deactivate some contexts to finally find a bug (the catalogue displays all items even though the LowBudget context is activated). If we wanted to debug this, it would be really simpler with the visualization tool because without it, we probably wouldn't have found the origin of the problem.","It's quick and easy to understand the context/feature relation, provide a way to have global overview of an app.","The visual need to be tweek a little, it's not always easy to read the name of the feature or of the context.","","1","3","2","2","3","3","2","4","2","2","5","1","1","2","it's useful to understand we do not know but not when developing our own part of the app since we build it our-self.","It's a good way to see the context tree without going into the code.","Th blue lines are absolutely unreadable.","","4","They complementary because when using the feature visualiser we need the context  and feature model visuallisation to look where the activated features and contexts are in their respective trees.","4","4","3","Yes, because it's complementary to the use of the language."
"2020/12/17 2:49:37 PM UTC+1","Walter White","2","1","5","1","5","2","5","5","3","2","4","2","5","It is easier to have a quick understanding of a program than if we would have to dive in the code.","2","""puts"" might be easier to quickly debug the program, unless it is a bigger problem. In that case, a debugger would be more helpful.","Colors look nice, linerarization errors are easy to spot/debug","Gets crowded when lots of features.","","4","2","5","1","4","1","5","2","5","2","5","5","3","4","","Colors are nice, more readable than the other tool, nice to see the feature and context models clearly (less jiggly than the other tool).","The mapping is not very readable.","We could replace the lines of the mapping by a mapping table that could highlight which mappings are used at each step.","3","It might not be obvious at first glance but we are getting there.","2","2","2","It would be good to have it as soon as we start coding."
"2020/12/17 3:15:07 PM UTC+1","Harry Potter","4","1","5","1","3","1","5","2","5","3","4","5","4","Cet outil permet de bien visualiser les liens entre les différentes features ainsi que les modifications qui ont lieu lors d'un changement de contexte.","4","Dans le cas de certaines erreurs le visualisation tool permet d'avoir une autre vue sur l'erreur de sorte à la détecter plus facilement. Par exemple, lors d'un changement de contexte on peut se retrouver avec une mauvaise hiérarchie d'adaptation qui est plus facilement détectable avec cet outil de visualisation. Par contre quand c'est une erreur non liée au contextes ou aux features cet outil ne permet pas de visualiser l'erreur.","Comme dit précédemment cet outil aide à visualiser le programme ainsi qu'à débugger.","Il est difficile de modifier l'emplacement des différents éléments affichés et la manière dont ils sont affiché par défaut n'est pas parfaitement lisible car certains éléments se superposent ou sont trop collés l'un à l'autre.","","5","1","5","1","5","1","5","1","5","2","5","5","2","5","Cet outil nous a bien été utile pour comprendre comment et dans quel ordre les features sont activées et désactivées lors d'un changement de contexte.","Il nous a aidé à comprendre comment et dans quel ordre les features sont activées et désactivées lors d'un changement de contexte.","Nous n'avons pas eu besoin du tableau en dessous (un peu à gauche).","","5","Ils proposent 2 visualisations différentes qui aident chacune de manière différente. ","5","5","3","Il serait peut-être bien de les donner un peu plus tôt, mais quand même après que les étudiants aient modélisé quelque features et contexts."
"2020/12/17 3:51:20 PM UTC+1","Les bambinos de l'espace","1","4","4","4","3","3","2","4","1","2","3","5","4","We can see what and when class/context/feature are activated or deactivated","4","We can compare two versions (one with bug and one working) to see the differences and understand what are the problems","It helps to have a better vision of the code. Seeing a diagram is more understandable than reading code","The feature visualizer hadn't enough explanation (not intuitive enough) and seems like the feature and context tools but more complexe","","3","1","5","2","4","1","5","1","4","2","4","5","5","5","We see the order of the activation and deactivation of the contexts and features","Inuitive and very visual","/","","2","","4","3","4","Yes, that helps to understand the context programming with the changes of features when a context is changed"
"2020/12/18 11:08:41 PM UTC+1","RenéMagritte","4","2","5","1","3","2","5","2","4","2","5","4","5","","5","first time we can see the order of activation of each features","simple interface, possibility to see in which order features are applied","Node moving in all direction after every move","reimplement the back button ;)","4","2","5","1","4","3","3","3","4","2","5","4","2","5","","possibility to see in which order contexts and features are activated","some irregularity when rolling back due to bad context activation (like two alternatives at same time)","","4","","5","3","4",""
"2020/12/18 11:12:46 PM UTC+1","SuperTintin","4","2","4","1","2","2","4","4","2","4","2","2","4","","5","","It gives a good visualisation of the features in the software. It can be use to easily debug code.","The visuals were a bit to big. Also, i didn't understood at first why the features were popping into screen without notice.","","5","3","4","2","4","2","4","3","3","2","5","4","5","4","","It gives a good overview of the contexts and features involved in the app. Also, the dynamic feature is very useful to see which features are activated/deactivated when we change the contexts.","It was way to big for my screen (i have a 15''6 screen), i couldn't see all the features and contexts at all. And it wasn't possible to redimension the windows sizes which was very frustrating.","","3","I think that using the second tool actually is equivalent to use the first one, with more info. But the first one is a bit more easy to use.","4","2","4","Yes because it really help to understand the structure of the language and to DEBUG."
"2020/12/19 11:25:13 AM UTC+1","garfield","4","3","1","4","4","3","3","3","3","4","4","2","4","","4","","Have a graphic representation of the relation inside the program step by step","The representation is rapidly cumbersome, and with bigger programm it should be very difficult to use or read","Option to see only some part of the program or color for different step, because sometimes there is multiple changement on one step with multiple arrows and it's difficult to know what was changing","4","1","4","2","4","3","5","2","4","1","5","4","4","4","","Not too overloaded, fairly intuitive","The execution of the default automatic steps and the framing of the different windows, it was sometimes necessary to scroll and to see the whole graph or to zoom out but then the graph was difficult to read.","","3","I think it should better to merged this tools, because using using 2 web page with multiple windows at the same times is not always easy ","4","3","4","Yes because at the beginning of the course we had a bad intuition of the context, even if the students don't all understand it will give them an intuition that theory doesn't always do"
"2020/12/20 11:38:09 AM UTC+1","Les Fifous","2","4","5","1","5","4","5","5","3","2","2","2","5","It's was helpfull because the way of the programming language is really hard to understand. The visualizer gives an interesting view of the order of execution dynamically. This help us to ""understand"" more easily the programming language","4","It can be really helpfull to see the ""process"" of execution. But there is too much module/file that crosses each other so it begins quickly quite complex for a big application.","The programming language execution is quite hard to understand. The visualizer provide a representation that really help us to understand deeper the programming language. Really easy to use, just reload the page and run script with -d","With a lot of data, there is too much squares with arrows that crosses each other. That made us quickly lost. The back button was unfornatunately missing but it would be necessary for a better use of the visualizer.","Try to make the graphical represent a bit more clear","5","1","5","1","5","1","5","1","5","1","5","5","5","5","It does'nt really help us because we had already well understood the way context and feature are activated or desactivate. But for a ""beginner"", it can really help him to get a well understanding and see quickly how it works.","Clean and pleasant Graphical Interface. Easy to use. Representative of the execution. Easy to understand","The blues lines are unlisible and make us feel unconfortable","","5","Yes, the two are treating a different topics of the execution. And provide a good way of debug or to understand the problem meets","5","5","5","Yes, there are not hard to use and understand so they can be usefull to get a deeper and easier understanding."
"2020/12/20 6:46:01 PM UTC+1","PtoléméeSense8","3","3","4","2","4","1","4","2","3","3","4","3","4","This tool is useful, as it helps us to see what is the order of activation of the contexts/features, and what are the modules and classes that react to this. It can help us to understand some problems, like the questions in mission 2.","4","By showing us the order of activation, and the final implementation of a certain method that is used.","It is really visual, we can understand without problems which contexts/features are activated, and what classes react to this. The step-by-step option is really useful for debugging. The classes show, for each method, which is the version that they use. It also helps to understand more precisely how the language works and so help to know better how to use to have the result we want.","As there are a lot of components displayed, it can become difficult to read.","1) The ""Back"" option was really nice, it is a shame that it was removed on the latest version :( 2) The fact that the diagram displayed jiggles at each steps makes it hard to follow what exactly happened. I was trying to understand the diagram step by step, focus on its shape and its relationships to see what would change with the next step, but each time the movement of the diagram would make me lose the visualisation of it. So I needed to analyse everything again and remember its previous state to see what new relationship had appeared. This was pretty frustrating and made it less straitforward to understand the steps. To make it easier to visualize the difference from one step to another, I think it would be better to have no jiggle at all and to have a change of shape slow enough that a human can see and understand what is happening. It would make it much easier to follow the steps. Actually, if it is not too hard to implement, I think it would be great if the diagram would directly take its final shape (or the shape it will have after the ongoing command has been fully executed). That way, the new relationships would just fill in the blank and it would be very easy to notice what is new or what has change at each step. 3) Sometimes we need to analyse only some specific relationships, for example one context and the chain of features that adapt each other in consequence until the concrete class. In this case, it would be great to be able to ""single out"" that part of the graph. This can be usefull to see it more easily or to get a clean image of that part without having other features or relathionship in the way. (For example, to answer the question 2 in Mission 2, we wanted to make a screenshot of the features and relationships from the context  MediumBudget to the class CatalogueModel, but that chain was going from one side of the graph to the other and there were many things in the background. So a screenshot of that would have been a messy image a bit too hard to understand because of the unwanted things in the background. We didn't manage to find a way to single out that relationship so gave up on introducing that screenshot because it wouldn't have been helpful enough.) I see two different complementary ways to do that. It would be a nice addition to be able to change the form of the graph. For example take a context that is on the left and move it so it is now on the right. This can be useful to have a shorter distance between the different features that adapt each other or place them somewhere where there are no other feature or relationships behind them. I think it can help for understanding. It can also be hepful to take screenshot, either by allowing to isolate the part of the graph we are interested in or by shaping in the way that best shows what we want to focus on while keeping the graph complete. Another nice feature would be the ability to show only the elements we are interested in and hide the other. Even with a small number of contexts and features, like for the e-shop, the diagram can be large and cluttered, so it is not that straight forward to notice the specific elements we are interested in. Showing only a subset of elements would help to understand  more easily the part of the graph we want to focus on. It would also allow to get clean images of the specific parts we want to talk about in a report. 4) The ""Time between each refresh"" acts as time before a new step is shown. It is nice if we want all the steps to display one after another by themselves. However, when we want to analyse each steps at our own pace, it could be nice if the timer was deactivated or if it were reset each time we manually go to the next step. As it is now, the diagram sometimes jumped to the following step when I wasn't ready for it. It's easy to rather easy to solve the problem by setting a very  large refresh time, but it would be a nice addition to be able to deactivate the timer or have it reset when we start a new step.","3","2","5","2","4","1","4","2","3","2","5","5","4","3","It helps to see the relationships between contexts and features and to notice when there are problems at that level. For example when we think the activation of a context should activate a certain feature, but it does happen as expected (like in Q2 of Mission 2). It is thus well complementary to the other tool since that kind of problem can't be seen with it.","It is useful, since it shows all the potential contexts, and features that can be activated by these contexts. It also shows which contexts and features are activated at runtime. It also is a good reminder of the relationships between the different contexts and features, specifically mutually exclusive ones.","-","-","5","As explained in the previous page, they are well complementary because they allow to analyse things at different levels. The feature visualiser is more helpful to understand how the activation of the features work once a context has been activated. The feature and context model visualiser is more helpful to understand the relationships in between contexts and between contexts and features.","4","3","4","The feature visualiser tool helps to understand how the langage works, so it could be helpful a bit earlier on so we can better understand the way the features are activated, which can help with the use of the langage. "
"2020/12/24 11:11:03 AM UTC+1","chips","2","1","4","1","4","4","4","2","4","2","2","4","4","","4","","it allows to see easily what changes when we activate or deactivate a context","sometimes it has an unpredictable behaviour, but maybe it is because we don't know how to use it properly","","2","2","4","1","4","2","4","2","4","2","4","2","2","2","","it allows to understand easily what happens when we change context","it sometimes has unpredictable behaviour","","4","","4","4","1",""
"2020/12/29 11:44:03 AM UTC+1","Neth","2","2","4","2","4","2","5","2","4","3","4","3","5","for small program we think it may be 'too much' because we can still easily understand our architecture. For bigger program and bigger team it could be more beneficial.","4","We feel it can only debug things acting on the activation/deactivation of features and not things much harder.","Easier to show the workflow. Testing of edges cases","We have to change manually the context. If we can automate the context switching by scripting we could just launch our script and see if everything goes according to our plan. Easier to test each time edges cases","PNG and video export. Switch context with mouse clicking. Switch context by scripting. We could use the visualisation tool to change the mapping dynamically. Not use the featureIDE but do everything inside this tool so that the base code is automatically generated.","2","2","4","2","2","2","4","2","4","4","4","4","3","4","","Easily see if a mistake was made in the feature/context and so rapidly debug such issue.","Only useful for visualisation but so we have to stop coding, look at it, and then go back.","If we could have this window dynamically evolving while coding it could make it more useful.","2","","3","4","3","No we think it was great that way because we add time to understand what we would like to see in such tools"